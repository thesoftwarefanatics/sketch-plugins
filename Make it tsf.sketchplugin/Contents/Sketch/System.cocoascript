var System = {};

System.chooseFile = function() {
    var panel = NSOpenPanel.openPanel();
    panel.setCanChooseDirectories(false);
    panel.setCanChooseFiles(true);
    panel.setCanCreateDirectories(false);
    panel.setAllowedFileTypes(["txt", "png", "jpg", "jpeg", "tif", "tiff", "gif", "webp", "bmp"]);
    if (panel.runModal() == NSOKButton) {
        return panel.URL().path();
    }
};

System.chooseFolder = function(setCanCreateDirectories) {
    var panel = NSOpenPanel.openPanel();
    panel.setCanChooseDirectories(true);
    panel.setCanChooseFiles(false);
    if (setCanCreateDirectories == true) {
        panel.setCanCreateDirectories(true);
    }
    if (panel.runModal() == NSOKButton) {
        return panel.URL().path();
    }
};

System.savePanel = function(defaultName) {
    var panel = NSSavePanel.savePanel();
    if (defaultName) {
        panel.setNameFieldStringValue(defaultName);
    }
    panel.setCanCreateDirectories(true);
    if (panel.runModal() == NSOKButton) {
        return panel.URL().path();
    }
};

System.imagesFromFolder = function(path) {
    var images = [];
    var supportFormats = ["png", "jpg", "jpeg", "tif", "tiff", "gif", "webp", "bmp"];
    var fileManager = NSFileManager.defaultManager();
    var fileList = fileManager.contentsOfDirectoryAtPath_error(path, nil);
    fileList = fileList.sortedArrayUsingSelector("localizedStandardCompare:");
    fileList.forEach(function(file) {
        if (supportFormats.indexOf(String(file.pathExtension().lowercaseString())) != -1) {
            images.push(path + "/" + file);
        }
    });
    return images;
};

System.imagesFromChooseFolder = function() {
    var imageFolder = System.chooseFolder();
    if (imageFolder == nil) {
        return [];
    } else {
        return System.imagesFromFolder(imageFolder);
    }
}

System.writeStringToFile = function(content, filePath) {
    NSString.stringWithString(content).writeToFile_atomically_encoding_error_(
        filePath, true, NSUTF8StringEncoding, nil
    );
};

System.showInFinder = function(filePath) {
    NSWorkspace.sharedWorkspace().selectFile_inFileViewerRootedAtPath(filePath, nil);
};

System.mkdir = function(filePath) {
    return NSFileManager.defaultManager().createDirectoryAtPath_withIntermediateDirectories_attributes_error_(
        filePath, true, nil, nil
    );
};